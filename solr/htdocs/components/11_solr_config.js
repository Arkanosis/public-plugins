// Generated by CoffeeScript 1.12.6

/* Do not edit this .js, edit the .coffee file and recompile */

(function() {
  var slice = [].slice;

  (function($) {
    var get, setup;
    $.solr_config = function() {
      var options, opts, params;
      options = arguments[0], params = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if ($.type(options) === 'string') {
        return get(options, params);
      } else {
        opts = $.extend({}, $.solr_config.defaults, options);
        return setup(opts);
      }
    };
    setup = function(opts) {
      if ($('html').data('config')) {
        return new $.Deferred().resolve();
      }
      return $.ajax({
        url: opts.url,
        dataType: 'json'
      }).done(function(data) {
        return $('html').data('config', data);
      });
    };
    get = function(path, params) {
      var argidx, data, e, i, j, k, len, len1, next, ref, val;
      data = $('html').data('config');
      argidx = 0;
      ref = path.split('.');
      for (i = 0, len = ref.length; i < len; i++) {
        k = ref[i];
        if (data == null) {
          continue;
        }
        if (k === '%') {
          data = data[params[argidx]];
          argidx += 1;
        } else if (k.charAt(k.length - 1) === '=') {
          k = k.substring(0, k.length - 1);
          val = params[argidx];
          argidx += 1;
          next = null;
          for (j = 0, len1 = data.length; j < len1; j++) {
            e = data[j];
            if (e[k] === val) {
              next = e;
            }
          }
          data = next;
        } else {
          data = data[k];
        }
      }
      return data;
    };
    return $.solr_config.defaults = {};
  })(jQuery);

}).call(this);
