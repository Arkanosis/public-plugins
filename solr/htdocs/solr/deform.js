// Generated by CoffeeScript 1.5.0
(function() {
  var deform, deform_reset_height, deformed, element, fixing, last_top, old_top, position_event, sender, vpos;

  element = void 0;

  deformed = void 0;

  vpos = void 0;

  last_top = void 0;

  old_top = void 0;

  fixing = void 0;

  sender = void 0;

  position_event = void 0;

  deform = function(region, amount) {
    element = region;
    old_top = $(window).scrollTop();
    last_top = old_top;
    deformed = amount;
    vpos = 0;
    fixing = 0;
    sender = void 0;
    $(window).scroll(function(e) {
      return position_event();
    });
    $(window).resize(function() {
      return position_event();
    });
    $(window).keydown(function(e) {
      var bottom, sense, top;
      sense = 0;
      if (e.which === 33) {
        sense = -1;
      } else if (e.which === 34) {
        sense = 1;
      }
      if (sense !== 0) {
        top = $(window).scrollTop();
        top += sense * $(window).height() * 0.8;
        if (top < 0) {
          top = 0;
        }
        bottom = $(document).height() - $(window).height();
        if (top > bottom) {
          top = bottom;
        }
        $(window).scrollTop(top);
        return false;
      } else {
        return true;
      }
    });
    return position_event();
  };

  deform_reset_height = function(region, amount) {
    var dheight;
    console.log("height was/will-be", deformed, amount);
    dheight = element.height() * amount / deformed;
    element.height(dheight);
    deformed = amount;
    if (vpos !== -1) {
      return $(window).scrollTop(vpos * dheight / deformed + element.offset().top);
    }
  };

  position_event = function() {
    var bottom, change, dest, dheight, displayed, incr, top;
    top = $(window).scrollTop();
    if (fixing) {
      old_top = top;
      fixing = 0;
      return;
    }
    bottom = top + $(window).height();
    dheight = element.outerHeight(true);
    incr = Math.abs(top - old_top) < $(window).height();
    change = top - old_top;
    old_top = top;
    if (element.offset().top > bottom) {
      vpos = -1;
    } else if (element.offset().top + element.outerHeight(true) < top) {
      vpos = -1;
    } else if (top < element.offset().top) {
      vpos = 0;
    } else if (bottom > element.offset().top + element.outerHeight(true)) {
      displayed = top - element.offset().top;
      vpos = displayed * deformed / dheight;
    } else if (incr) {
      vpos += change;
      if (vpos < 0) {
        vpos = 0;
      }
      if (vpos > deformed) {
        vpos = deformed;
      }
      dest = vpos * dheight / deformed + element.offset().top;
      fixing = 1;
      $(window).scrollTop(dest);
    } else {
      displayed = top - element.offset().top;
      vpos = displayed * deformed / dheight;
    }
    element.trigger('vscroll', [vpos, top - element.position().top]);
    return true;
  };

  window.deform = deform;

  window.deform_reset_height = deform_reset_height;

}).call(this);
